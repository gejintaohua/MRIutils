function [reportfile,info,thumbfile] = parxscanreport(scandir,reportdir)
% [reportfile,info,thumbfile] = parxscanreport(scandir,reportdir)
%
% Generate an HTML report for the given scan within the reportdir tree
%
% ARGS :
% scandir   = Paravision scan directory containing method, imnd, etc files
% reportdir = destination directory for HTML report
%
% RETURNS:
% reportfile = report page filename
% info       = Paravision information structure (generated by parxloadinfo)
% thumbfile  = image thumbnail filename
%
% AUTHOR : Mike Tyszka, Ph.D.
% PLACE  : Caltech BIC
% DATES  : 01/10/2002 JMT Adapt from parxreport.m (JMT)
%          12/05/2005 JMT Make functional
%          12/09/2005 JMT Add thumbnail and correct returned filenames
%          01/17/2006 JMT M-Lint corrections
%
% Copyright 2000-2006 California Institute of Technology.
% All rights reserved.

% Default args
if nargin < 1; scandir = pwd; end
if nargin < 2; reportdir = fullfile(scandir,'report'); end

% Load paravision information for this scan
info = parxloadinfo(scandir);

if isequal(info.name,'Unknown')
  return
end

% Extract exam name, study number and scan number from the info structure
exname  = info.name;
studyno = info.studyno;
scanno  = info.scanno;

% Make the report directory if necessary
if ~exist(reportdir,'dir')
  fprintf('Creating %s\n', reportdir);
  [status,msg] = mkdir(reportdir);
  if status == 0
    fprintf('%s\n',msg);
    return
  end
end

reportstub = sprintf('%s_%04d_%04d',exname,studyno,scanno);
reportfile = sprintf('%s.htm',reportstub);
reportpath = fullfile(reportdir,reportfile);

% Open the report file
fd = fopen(reportpath,'w');
if fd < 1
  fprintf('Could not open %s to write\n',reportfile);
  return
end

% HTML constant tags
fonttag = '<font face="arial">';
bigfonttag = '<font face="arial" size=+2 color=#ffffff><b>';

% Write HTML header
fprintf(fd,'<html>\n');
fprintf(fd,'<body>\n');

% Insert study index link
fprintf(fd,'<a href="index.htm"><font face="arial" size=+2>STUDY INDEX</a><br>\n');

% Start outer table
fprintf(fd,'<table width=100%% border=1 cellpad=5>\n');

% Main table row
fprintf(fd,'<tr>\n');

% Image cell
fprintf(fd,'<td width=512 height=512>\n');

% Generate thumbnail montage or spectrum graph
switch info.method

  case {'<VSEL_SE>','VSEL_STE'}

    fprintf(fd,'Spectroscopy data<br>\n');

  otherwise

    % Load the scan data
    [s,info] = parxload2dseq(scandir);

    % Eliminate singlet dimensions
    s = squeeze(s);

    if isempty(s)
      % Replace empty data with a dummy 3D image
      s = ones(8,8,9);
    end

    % Auto crop 2D and 3D images
    switch info.ndim

      case {2,3}

        % Normalize image
        s = s / max(s(:)+eps);

        % If total slices > 25, downsample slices
        sdim = size(s);
        nz = sdim(3);
        if nz > 25
          s = s(:,:,fix(linspace(1,nz,25)));
        end

        % Create a montage of the data
        m = bic_montage(s);

        % Create a thumbnail
        sdim = size(s);
        nz = sdim(3);
        thumb = s(:,:,round(nz/2));
        thumb = imresize(thumb,[64 64]);

      otherwise

        % Dummy montage
        m = zeros(8,8);

        % Dummy thumbnail
        thumb = zeros(64,64);

    end

    % Write the montage as a PNG file
    mname = sprintf('%s.png',reportstub);
    mpath = fullfile(reportdir,mname);
    imwrite(m,mpath,'png');

    % Write the thumbnail as a PNG file
    thumbfile = sprintf('%s_thumb.png',reportstub);
    thumbpath = fullfile(reportdir,thumbfile);
    imwrite(thumb,thumbpath,'png');

    % Add a link to the image
    fprintf(fd,'<img src="%s" height=512 width=512>\n',mname);

end

% End image cell
fprintf(fd,'</td>\n');

% Start info table within a cell

fprintf(fd,'<td valign=top>\n');
fprintf(fd,'<table width=100%% bgcolor=#333333>\n');
fprintf(fd,'<tr><td>%s%s %sStudy %d %sScan %d</tr>\n', bigfonttag, exname, bigfonttag, studyno, bigfonttag, scanno);
fprintf(fd,'</table><br>\n');

fprintf(fd,'<table width=100%% border=0 cellpad=5 bgcolor=#aaaaff>\n');
fprintf(fd,'<tr><td>%sSubject ID<td>%s</tr>\n',fonttag, info.id);
fprintf(fd,'<tr><td>%sStudy name<td>%s</tr>\n',fonttag, info.studyname);
fprintf(fd,'<tr><td>%sMethod<td>%s</tr>\n',fonttag, info.method);
fprintf(fd,'<tr><td>%sScan time<td>%s</tr>\n',fonttag, info.time);
fprintf(fd,'<tr><td>%sTR<td>%s%0.1f ms</tr>\n',fonttag, fonttag, info.tr);
fprintf(fd,'<tr><td>%sTE<td>%s%0.1f ms</tr>\n',fonttag, fonttag, info.te);
fprintf(fd,'<tr><td>%sAverages<td>%s%d</tr>\n',fonttag, fonttag, info.navs);
fprintf(fd,'<tr><td>%sDimensions<td>%s%d</tr>\n',fonttag, fonttag, info.ndim);

% Dimension specific
dim = info.sampdim;
fov = info.fov;
vsize = info.vsize;
fprintf(fd,'<tr><td>%sMatrix<td>%s%d x %d x %d x %d</tr>\n',fonttag, fonttag, dim(1), dim(2), dim(3), dim(4));
fprintf(fd,'<tr><td>%sFOV<td>%s%0.1f mm x %0.1f mm x %0.1f mm</tr>\n',fonttag, fonttag, fov(1), fov(2), fov(3));
fprintf(fd,'<tr><td>%sVoxel<td>%s%0.1f um x %0.1f um x %0.1f um</tr>\n',fonttag, fonttag, vsize(1), vsize(2), vsize(3));
fprintf(fd,'<tr><td>%sSlice<td>%s%0.2f mm</tr>\n',fonttag, fonttag, info.slthick);

% Remarks
fprintf(fd,'<tr><td valign=top>%sRemarks<td>%s</tr>\n',fonttag, info.remarks);

% End info table
fprintf(fd,'</table></td><br>\n');

% End outer table
fprintf(fd,'<table>\n');

% Write HTML footer
fprintf(fd,'</body>\n');
fprintf(fd,'</html\n>\n');

% Close the report file
fclose(fd);

% Display the resulting webpage in Matlab's browser
% web(['file:///' reportpath]);
